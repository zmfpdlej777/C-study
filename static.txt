 5. Static 
  - 객체 생성과 상관 없이 사용되는 멤버
   *기존은 객체 생성이 되야 멤버가 사용 가능했다.
  - 객체에 멤버 요소가 아니라, Data영역에 공통적으로 사용되는 공간이 만들어진다.
   => 모든 객체가 이 하나의 공간을 참조한다.
  - 요약 : 모든 객체가 하나의 공간을 참조하여 일괄적으로 처리되어야 할 공간
  - 주의 : static 멤버의 외부 정의시 static은 적지 않는다. class 내부에서만 적어야 한다!
  - 접근 지정자의 영향을 받는다(public..private..)

  5-1 static 멤버 변수
  - 모든 객체를 통틀어 단 하나만 만들어지는 멤버 변수 공간
  - 모든 객체가 일괄적으로 처리되어야 할 데이터를 저장하는 변수 공간
  - 모든 객체는 단 하나의 공간을 참조하게 됨
  - 프로그램이 실행할때 공간이 생성되고, 프로그램이 종료될때 공간이 소멸 => 객세 생성되기 이전부터 사용 가능
  - 사용 : static 키워드를 붙여서 선언 
   ex) static int n;
  - 주의 : 반드시 외부에 초기화를 해야 한다

  5-2 static 멤버 함수
  - 목적 : class에 기능과는 연관이 있지만, 객체 생성과는 상관없이 사용될수 있도록 만드는 멤버 함수
  - 주의 : const와 병행 불가, 외부 정의시 앞에 class명 적어주고, static은 삭제할것
  - static을 붕여서 선언한 멤버 함수
  - static 멤버 함수는 this가 존재하지 않는다 => class와 관련된 것이기 때문. 객체와 관련 X
  - static 멤버 함수간에는 static 멤버만 사용 가능(객체 생성과 상관없는 것들만 사용할수 있다는 소리)
